Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    STA

Grammar

Rule 0     S' -> expr
Rule 1     expr -> NAME NAME EQUAL NAME
Rule 2     expr -> NAME NAME EQUAL NAME PLUS NAME
Rule 3     expr -> NAME NAME EQUAL NAME MINUS NAME
Rule 4     expr -> NAME NAME EQUAL NAME DIVIDE NAME
Rule 5     expr -> NAME NAME EQUAL NAME TIMES NAME
Rule 6     expr -> NAME NAME MINUS SENT
Rule 7     expr -> NAME NAME
Rule 8     SENT -> expr
Rule 9     expr -> NAME NAME LKAKKO NAME RKAKKO LNAMI
Rule 10    expr -> NAME NAME IF1 NAME LNAMI
Rule 11    expr -> NAME NAME IF2 NAME LNAMI
Rule 12    expr -> NAME NAME EQUAL EQUAL NAME LNAMI
Rule 13    expr -> NAME NAME LNAMI
Rule 14    expr -> NAME LKAKKO NAME RKAKKO
Rule 15    expr -> NUMBER

Terminals, with rules where they appear

DIVIDE               : 4
EQUAL                : 1 2 3 4 5 12 12
IF1                  : 10
IF2                  : 11
LKAKKO               : 9 14
LNAMI                : 9 10 11 12 13
MINUS                : 3 6
NAME                 : 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 7 7 9 9 9 10 10 10 11 11 11 12 12 12 13 13 14 14
NUMBER               : 15
PLUS                 : 2
RKAKKO               : 9 14
STA                  : 
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

SENT                 : 6
expr                 : 8 0

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . NAME NAME EQUAL NAME
    (2) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (3) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (4) expr -> . NAME NAME EQUAL NAME DIVIDE NAME
    (5) expr -> . NAME NAME EQUAL NAME TIMES NAME
    (6) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME
    (9) expr -> . NAME NAME LKAKKO NAME RKAKKO LNAMI
    (10) expr -> . NAME NAME IF1 NAME LNAMI
    (11) expr -> . NAME NAME IF2 NAME LNAMI
    (12) expr -> . NAME NAME EQUAL EQUAL NAME LNAMI
    (13) expr -> . NAME NAME LNAMI
    (14) expr -> . NAME LKAKKO NAME RKAKKO
    (15) expr -> . NUMBER

    NAME            shift and go to state 2
    NUMBER          shift and go to state 3

    expr                           shift and go to state 1

state 1

    (0) S' -> expr .



state 2

    (1) expr -> NAME . NAME EQUAL NAME
    (2) expr -> NAME . NAME EQUAL NAME PLUS NAME
    (3) expr -> NAME . NAME EQUAL NAME MINUS NAME
    (4) expr -> NAME . NAME EQUAL NAME DIVIDE NAME
    (5) expr -> NAME . NAME EQUAL NAME TIMES NAME
    (6) expr -> NAME . NAME MINUS SENT
    (7) expr -> NAME . NAME
    (9) expr -> NAME . NAME LKAKKO NAME RKAKKO LNAMI
    (10) expr -> NAME . NAME IF1 NAME LNAMI
    (11) expr -> NAME . NAME IF2 NAME LNAMI
    (12) expr -> NAME . NAME EQUAL EQUAL NAME LNAMI
    (13) expr -> NAME . NAME LNAMI
    (14) expr -> NAME . LKAKKO NAME RKAKKO

    NAME            shift and go to state 4
    LKAKKO          shift and go to state 5


state 3

    (15) expr -> NUMBER .

    $end            reduce using rule 15 (expr -> NUMBER .)


state 4

    (1) expr -> NAME NAME . EQUAL NAME
    (2) expr -> NAME NAME . EQUAL NAME PLUS NAME
    (3) expr -> NAME NAME . EQUAL NAME MINUS NAME
    (4) expr -> NAME NAME . EQUAL NAME DIVIDE NAME
    (5) expr -> NAME NAME . EQUAL NAME TIMES NAME
    (6) expr -> NAME NAME . MINUS SENT
    (7) expr -> NAME NAME .
    (9) expr -> NAME NAME . LKAKKO NAME RKAKKO LNAMI
    (10) expr -> NAME NAME . IF1 NAME LNAMI
    (11) expr -> NAME NAME . IF2 NAME LNAMI
    (12) expr -> NAME NAME . EQUAL EQUAL NAME LNAMI
    (13) expr -> NAME NAME . LNAMI

    EQUAL           shift and go to state 6
    MINUS           shift and go to state 7
    $end            reduce using rule 7 (expr -> NAME NAME .)
    LKAKKO          shift and go to state 8
    IF1             shift and go to state 10
    IF2             shift and go to state 11
    LNAMI           shift and go to state 9


state 5

    (14) expr -> NAME LKAKKO . NAME RKAKKO

    NAME            shift and go to state 12


state 6

    (1) expr -> NAME NAME EQUAL . NAME
    (2) expr -> NAME NAME EQUAL . NAME PLUS NAME
    (3) expr -> NAME NAME EQUAL . NAME MINUS NAME
    (4) expr -> NAME NAME EQUAL . NAME DIVIDE NAME
    (5) expr -> NAME NAME EQUAL . NAME TIMES NAME
    (12) expr -> NAME NAME EQUAL . EQUAL NAME LNAMI

    NAME            shift and go to state 13
    EQUAL           shift and go to state 14


state 7

    (6) expr -> NAME NAME MINUS . SENT
    (8) SENT -> . expr
    (1) expr -> . NAME NAME EQUAL NAME
    (2) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (3) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (4) expr -> . NAME NAME EQUAL NAME DIVIDE NAME
    (5) expr -> . NAME NAME EQUAL NAME TIMES NAME
    (6) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME
    (9) expr -> . NAME NAME LKAKKO NAME RKAKKO LNAMI
    (10) expr -> . NAME NAME IF1 NAME LNAMI
    (11) expr -> . NAME NAME IF2 NAME LNAMI
    (12) expr -> . NAME NAME EQUAL EQUAL NAME LNAMI
    (13) expr -> . NAME NAME LNAMI
    (14) expr -> . NAME LKAKKO NAME RKAKKO
    (15) expr -> . NUMBER

    NAME            shift and go to state 2
    NUMBER          shift and go to state 3

    SENT                           shift and go to state 15
    expr                           shift and go to state 16

state 8

    (9) expr -> NAME NAME LKAKKO . NAME RKAKKO LNAMI

    NAME            shift and go to state 17


state 9

    (13) expr -> NAME NAME LNAMI .

    $end            reduce using rule 13 (expr -> NAME NAME LNAMI .)


state 10

    (10) expr -> NAME NAME IF1 . NAME LNAMI

    NAME            shift and go to state 18


state 11

    (11) expr -> NAME NAME IF2 . NAME LNAMI

    NAME            shift and go to state 19


state 12

    (14) expr -> NAME LKAKKO NAME . RKAKKO

    RKAKKO          shift and go to state 20


state 13

    (1) expr -> NAME NAME EQUAL NAME .
    (2) expr -> NAME NAME EQUAL NAME . PLUS NAME
    (3) expr -> NAME NAME EQUAL NAME . MINUS NAME
    (4) expr -> NAME NAME EQUAL NAME . DIVIDE NAME
    (5) expr -> NAME NAME EQUAL NAME . TIMES NAME

    $end            reduce using rule 1 (expr -> NAME NAME EQUAL NAME .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    DIVIDE          shift and go to state 23
    TIMES           shift and go to state 24


state 14

    (12) expr -> NAME NAME EQUAL EQUAL . NAME LNAMI

    NAME            shift and go to state 25


state 15

    (6) expr -> NAME NAME MINUS SENT .

    $end            reduce using rule 6 (expr -> NAME NAME MINUS SENT .)


state 16

    (8) SENT -> expr .

    $end            reduce using rule 8 (SENT -> expr .)


state 17

    (9) expr -> NAME NAME LKAKKO NAME . RKAKKO LNAMI

    RKAKKO          shift and go to state 26


state 18

    (10) expr -> NAME NAME IF1 NAME . LNAMI

    LNAMI           shift and go to state 27


state 19

    (11) expr -> NAME NAME IF2 NAME . LNAMI

    LNAMI           shift and go to state 28


state 20

    (14) expr -> NAME LKAKKO NAME RKAKKO .

    $end            reduce using rule 14 (expr -> NAME LKAKKO NAME RKAKKO .)


state 21

    (2) expr -> NAME NAME EQUAL NAME PLUS . NAME

    NAME            shift and go to state 29


state 22

    (3) expr -> NAME NAME EQUAL NAME MINUS . NAME

    NAME            shift and go to state 30


state 23

    (4) expr -> NAME NAME EQUAL NAME DIVIDE . NAME

    NAME            shift and go to state 31


state 24

    (5) expr -> NAME NAME EQUAL NAME TIMES . NAME

    NAME            shift and go to state 32


state 25

    (12) expr -> NAME NAME EQUAL EQUAL NAME . LNAMI

    LNAMI           shift and go to state 33


state 26

    (9) expr -> NAME NAME LKAKKO NAME RKAKKO . LNAMI

    LNAMI           shift and go to state 34


state 27

    (10) expr -> NAME NAME IF1 NAME LNAMI .

    $end            reduce using rule 10 (expr -> NAME NAME IF1 NAME LNAMI .)


state 28

    (11) expr -> NAME NAME IF2 NAME LNAMI .

    $end            reduce using rule 11 (expr -> NAME NAME IF2 NAME LNAMI .)


state 29

    (2) expr -> NAME NAME EQUAL NAME PLUS NAME .

    $end            reduce using rule 2 (expr -> NAME NAME EQUAL NAME PLUS NAME .)


state 30

    (3) expr -> NAME NAME EQUAL NAME MINUS NAME .

    $end            reduce using rule 3 (expr -> NAME NAME EQUAL NAME MINUS NAME .)


state 31

    (4) expr -> NAME NAME EQUAL NAME DIVIDE NAME .

    $end            reduce using rule 4 (expr -> NAME NAME EQUAL NAME DIVIDE NAME .)


state 32

    (5) expr -> NAME NAME EQUAL NAME TIMES NAME .

    $end            reduce using rule 5 (expr -> NAME NAME EQUAL NAME TIMES NAME .)


state 33

    (12) expr -> NAME NAME EQUAL EQUAL NAME LNAMI .

    $end            reduce using rule 12 (expr -> NAME NAME EQUAL EQUAL NAME LNAMI .)


state 34

    (9) expr -> NAME NAME LKAKKO NAME RKAKKO LNAMI .

    $end            reduce using rule 9 (expr -> NAME NAME LKAKKO NAME RKAKKO LNAMI .)

